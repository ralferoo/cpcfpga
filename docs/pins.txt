only 68 io pins

SRAM	29		AS6C4008 - 19 addr, 8 data, WE#, OE# (CE# tied low)
flash	 4		C, DIO, DO, S# (W# low via dip switch, HOLD# tied high)
sdmmc	 1		CS (share clk, out, in) with flash


clock	 2		20 Mhz, 4FSC (PAL)
video	 8		3x2 RGB, (csync, blank) or (vsync, hsync)
audio	 2    2L		PWM
misc io	 3       2P RST	RESET, NMI, DEBUG
keyb	12 8D 4L	8 bits in, 4 select
tape	 3    2L 1P	read, write, motor

total	68

need another 6 or 7 for composite DAC

top bank of pins = 20+14				= 34
bottom bank pins = 17(SW+LED+p27)+13(PSW+p2-p8,p11,p13)	= 30

clock is pin 15
reset is pin 10
txd=19, rxd=16 (for uart)

bank 0: 98-90,86-76	= 9+11 = 20		top row 	top
bank 1: 73-69,65-57	= 5+9  = 14		bottom row	top
bank 2: 45-40,36-26	= 6+11 = 17		top row		bottom
bank 3: 23-20,(19,16,15),13,11,(10),8-2 = 13+4	bottom row	bottom

total 68 pins



io assignment:

bank 0+1:
SRAM	29		AS6C4008 - 19 addr, 8 data, WE#, OE# (CE# tied low)
flash	 4		C, DIO, DO, S# (W# low via dip switch, HOLD# tied high)
sdmmc	 1		CS (share clk, out, in) with flash

bank 2:
keyb	12 8D 4L	8 bits in, 4 select (in=26,28-34, out=35,36,40,41)
audio	 2    2L		PWM	(44,45)		currently pin 13, maybe use 27 too?
tape_out 2    2L 	write, motor	(42,43)
spare	 1				(27)

bank 3:
video	 8		3x2 RGB, (csync, blank) or (vsync, hsync) (2-7,8,11)
reset	 1		RESET [10 not header]
clock20	 1		20 Mhz [15 not header]
uart	 2		usb debug uart *sigh*
misc io	 2       2P 	NMI, DEBUG	(20,21)
tape_in	 1       1P	read		(23)
ps2key	 2	 1P	hmmm, both nominally output - needs care!

future proto board:

---reorder?---
s# do cl di s#  a18 a15 a17 we# a13 a8  a9  a11 oe# a10 dq7 dq6 dq5 dq4 dq3
---flash--- sd   1  31  30  29  28  27  26  25  24  23  21  20  19  18  17 sram
98 97 96 95 94  93  92  91  90  86  85  84  83  82  81  80  79  78  77  76
-vcc- vccb0 vcc_b1  73  72  71  70  69  65  64  63  62  61  60  59  58  57
		     2   3   4   5   6   7   8   9  10  11  12  13  14  15 sram
	            a16 a14 a12 a7  a6  a5  a4  a3  a2  a1  a0  dq0 dq1 dq2

current proto board:

s# do cl di a18 a15 a17 we# a13 a8  a9  a11 oe# a10 ce# dq7 dq6 dq5 dq4 dq3
---flash---  1  31  30  29  28  27  26  25  24  23  22  21  20  19  18  17 sram
98 97 96 95 94  93  92  91  90  86  85  84  83  82  81  80  79  78  77  76
-vcc- vccb0 vcc_b1  73  72  71  70  69  65  64  63  62  61  60  59  58  57
		     2   3   4   5   6   7   8   9  10  11  12  13  14  15 sram
	            a16 a14 a12 a7  a6  a5  a4  a3  a2  a1  a0  dq0 dq1 dq2

sram chip:

32->17	vcc,a15,a17,we#,a13,a8,a9,a11,oe#,a10,ce#,dq7,dq6,dq5,dq4,dq3
1->16	a18,a16,a14,a12,a7,a6,a5,a4,a3,a2,a1,a0,dq0,dq1,dq2,vss

sram_16 to gnd, sram_32 to vcc


         ---------------keyboard------------ tape  nc -ps2-
         26 27 28 29 30 31 32 33 34 35 36 40 41 42 43 44 45
+  +  -, i, X, i  i  i  i  i  i  i, o  o  o  o, o  o, o  o
+  +  -, X  X  X  X  X  X  X  X  X, i  i  i  i, g  g  g  g
         2  3  4  5  6  7  8  11 13 20 21 22 23 
         red-- green blue- sync- au nc D  N  tape

	nc is reserved for right audio, undriven for now in case pushsw selected




not implemented:
clockTV	 1		4FSC (PAL)


assign_quadrant_clock -net {clock128} -quadrant LL
assign_quadrant_clock -net {clock16}  -quadrant LR




create_clock  -name { clock16  } -freq  16.000 { n:clk16   }
create_clock  -name { clock4   } -freq   4.000 { n:clk4    }


