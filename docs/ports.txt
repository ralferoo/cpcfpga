This is an attempt to document the IO ports I implement before it becomes too
unweildly to come back and document them all...


	Nonstandard ports	read/write	file			notes
	-----------------	----------	---------------		-----

FADC				read		cpc.vhd (uart_rx.vhd)	Fixed baudrate serial  input, same port as Amstrad's uart
FADC				write		cpc.vhd (uart_tx.vhd)	Fixed baudrate serial output, same port as Amstrad's uart
FADD				read		cpc.vhd (uart_*.vhd)	Status, b7=TX empty, b6=RX data, b5=RX error, b3-b0=push switches.

FADE				read		cpc.vhd			Read dip switches. Will be deprecated soon when IO pins reused.
FADE				write		cpc.vhd			Output to LEDs. Will be deprecated soon when IO pins reused.

FEFF				write		cpc.vhd (spi.vhd)	SPI control. bit7=clock idle state/SPI mode. bit0=rom CS, bit1=SD CS.
FEFF				read		cpc.vhd (spi.vhd)	Reads previous byte received.
FFxx				read		cpc.vhd (spi.vhd)	Byte in C is written to SPI bus, reads the previous byte read received.
FFxx				write		cpc.vhd (spi.vhd)	Byte outputted is written to SPI bus.

FEFE				write		gate_array.vhd		FPGA ROM emulation control
									bit7=upper ROM writable
									bit6=lower ROM writable
									bit5=bootrom replaces lower ROM
FEFD				write		gate_array.vhd		FPGA ROM emulation control
									bit1-7=ROM 1-7 enabled, if not enabled, ROM 0 is used instead

	Standard CPC port	read/write	file			notes
	-----------------	----------	---------------		-----

7F00	01xxxxxx xxxxxxxx	write only	gate_array.vhd		Gate Array multipurpose (palette, bank switching, rom disable)
DF00	xx0xxxxx xxxxxxxx	write only	gate_array.vhd		Upper ROM selector

BC00	x0xxxx00 xxxxxxxx	write only	crtc.vhd / cpc.vhd	CRTC register select			nCS=A14=0, RW=A9=0, RS=A8=0
BD00	x0xxxx01 xxxxxxxx	write only	crtc.vhd / cpc.vhd	CRTC register write			nCS=A14=0, RW=A9=0, RS=A8=1
BE00	x0xxxx10 xxxxxxxx	read  only	crtc.vhd / cpc.vhd	CRTC register status (not implemented)	nCS=A14=0, RW=A9=1, RS=A8=0
BF00	x0xxxx11 xxxxxxxx	read  only	crtc.vhd / cpc.vhd	CRTC register read (R12/R13 only)	nCS=A14=0, RW=A9=1, RS=A8=1

F400	xxxx0x00 xxxxxxxx	read/write	ppi8255.vhd / cpc.vhd	PSG databus nCS=A11=0, A9=9,A8=0
F500	xxxx0x01 xxxxxxxx	read  only	ppi8255.vhd / cpc.vhd	bit7=tape in, bit 0=vsync
F600	xxxx0x10 xxxxxxxx	write only	ppi8255.vhd / cpc.vhd	bit7-6=PSG BDIR&BC1, bit5=tape out, bit4=tape motor, bit3-0=keyboard
F700	xxxx0x11 xxxxxxxx	write only	ppi8255.vhd / cpc.vhd	PSG databus direction
									bit7=0 -> bit4=dir (0=output, 1=input)
									bit7=1 -> bit0=dir if bit3-1="100" (0=output, 1=input)

